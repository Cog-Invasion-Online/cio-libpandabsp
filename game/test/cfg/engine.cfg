###########################################################
###                                                     ###
### Panda3D Configuration File - Auto-Generated Portion ###
###                                                     ###
### Editing this file is not recommended. Most of these ###
### directives can be overriden in Config.prc           ###
###                                                     ###
###########################################################

# The egg loader is handy to have available by default.  This allows
# clients to load egg files.  (The bam loader is built-in so bam files
# are always loadable).

# By qualifying with the extension "egg", we indicate the egg loader
# should be made available only if you explicitly name a file with an
# .egg extension.

# Also see ptloader, which is built as part of pandatool; it allows
# files of more exotic types (like .flt, .mb, .lwo, and .dxf) to be
# loaded directly into Panda.

load-file-type egg pandaegg

# If we built with Assimp support, we can enable the Assimp loader,
# which allows us to load many model formats natively.

load-file-type p3assimp

# These entries work very similar to load-file-type, except they are
# used by the MovieVideo and MovieAudio code to determine which module
# should be loaded in order to decode files of the given extension.

# ffmpeg is added by default because it used to be compiled in.
# The * is a special catch-all extension that is consulted unless a
# loader has been defined with an explicit extension.

load-audio-type * p3ffmpeg
load-video-type * p3ffmpeg

# The following lines define some handy object types to use within the
# egg syntax.  This remaps <ObjectType> { name } into whatever egg
# syntax is given by egg-object-type-name, which makes a handy
# abbreviation for modeling packages (like Maya) to insert
# sophisticated egg syntax into the generated egg file, using a single
# object type string.

egg-object-type-portal          <Scalar> portal { 1 }
egg-object-type-polylight       <Scalar> polylight { 1 }
egg-object-type-seq24           <Switch> { 1 } <Scalar> fps { 24 }
egg-object-type-seq12           <Switch> { 1 } <Scalar> fps { 12 }
egg-object-type-indexed         <Scalar> indexed { 1 }
egg-object-type-seq10           <Switch> { 1 } <Scalar> fps { 10 }
egg-object-type-seq8            <Switch> { 1 } <Scalar> fps { 8 }
egg-object-type-seq6            <Switch> { 1 } <Scalar>  fps { 6 }
egg-object-type-seq4            <Switch> { 1 } <Scalar>  fps { 4 }
egg-object-type-seq2            <Switch> { 1 } <Scalar>  fps { 2 }

egg-object-type-binary          <Scalar> alpha { binary }
egg-object-type-dual            <Scalar> alpha { dual }
egg-object-type-glass           <Scalar> alpha { blend_no_occlude }

# These are just shortcuts to define the Model and DCS flags, which
# indicate nodes that should not be flattened out of the hierarchy
# during the conversion process.  DCS goes one step further and
# indicates that the node's transform is important and should be
# preserved (DCS stands for Dynamic Coordinate System).  Notouch is
# even stronger, and means not to do any flattening below the node at
# all.
egg-object-type-model           <Model> { 1 }
egg-object-type-dcs             <DCS> { 1 }
egg-object-type-notouch         <DCS> { no_touch }

# The following define various kinds of collision geometry.  These
# mark the geometry at this level and below as invisible collision
# polygons, which can be used by Panda's collision system to detect
# collisions more optimally than regular visible polygons.
egg-object-type-barrier         <Collide> { Polyset descend }
egg-object-type-sphere          <Collide> { Sphere descend }
egg-object-type-invsphere       <Collide> { InvSphere descend }
egg-object-type-tube            <Collide> { Tube descend }

# As above, but these are flagged to be "intangible", so that they
# will trigger an event but not stop an object from passing through.
egg-object-type-trigger         <Collide> { Polyset descend intangible }
egg-object-type-trigger-sphere  <Collide> { Sphere descend intangible }

# "floor" and "dupefloor" define the nodes in question as floor
# polygons.  dupefloor means to duplicate the geometry first so that
# the same polygons serve both as visible geometry and as collision
# polygons.
egg-object-type-floor           <Collide> { Polyset descend level }
egg-object-type-dupefloor       <Collide> { Polyset keep descend level }

# "bubble" puts an invisible bubble around an object, but does not
# otherwise remove the geometry.
egg-object-type-bubble          <Collide> { Sphere keep descend }

# "ghost" turns off the normal collide bit that is set on visible
# geometry by default, so that if you are using visible geometry for
# collisions, this particular geometry will not be part of those
# collisions--it is ghostlike.
egg-object-type-ghost           <Scalar> collide-mask { 0 }

# "glow" is useful for halo effects and things of that ilk.  It
# renders the object in add mode instead of the normal opaque mode.
egg-object-type-glow            <Scalar> blend { add }

# This module allows direct loading of formats like .flt, .mb, or .dxf

load-file-type p3ptloader

# Define a new egg object type.  See the comments in _panda.prc about this.

egg-object-type-direct-widget   <Scalar> collide-mask { 0x80000000 } <Collide> { Polyset descend }

# Define a new cull bin that will render on top of everything else.

cull-bin gui-popup 60 unsorted

# The following two lines are a fix for flaky hardware clocks.
# Nowadays, lock-to-one-cpu is probably more trouble than it's worth.
#lock-to-one-cpu #t

# So is paranoid-clock.
#paranoid-clock 1

# This default only comes into play if you try to load a model
# and don't specify an extension.

default-model-extension .egg

# If we have the SpeedTree library available, we'll want to use it for
# loading compiled SpeedTree tree objects, and SpeedTree forest
# tables.
#load-file-type srt pandaspeedtree
#load-file-type stf pandaspeedtree

###########################################################

###                                                     ###

### Panda3D Configuration File -  User-Editable Portion ###

###                                                     ###

###########################################################



# Uncomment one of the following lines to choose whether you should

# run using OpenGL, DirectX or TinyPanda (software) rendering.

# There can only be one load-display line, but you can use

# multiple aux-display lines to specify fallback modules.

# When the module indicated by load-display fails, it will fall

# back to the next display module indicated by aux-display,

# when that fails, the next aux-display line, and so on.



load-display pandagl

#load-display pandadx9

#load-display pandagles

#load-display p3tinydisplay



# These control the placement and size of the default rendering window.

# A value of -2 for the origin means to center it on the screen,

# while -1 lets the window manager choose the position.



win-origin -2 -2

win-size 800 600



# Uncomment this line if you want to run Panda fullscreen instead of

# in a window.



fullscreen #f



# The framebuffer-hardware flag forces it to use an accelerated driver.

# The framebuffer-software flag forces it to use a software renderer.

# If you set both to false, it will use whatever's available.



framebuffer-hardware #t

framebuffer-software #f



# These set the minimum requirements for the framebuffer.

# A value of 1 means: get as many bits as possible,

# consistent with the other framebuffer requirements.



depth-bits 1

color-bits 1 1 1

alpha-bits 0

stencil-bits 0

multisamples 0



# These control the amount of output Panda gives for some various

# categories.  The severity levels, in order, are "spam", "debug",

# "info", "warning", and "error"; the default is "info".  Uncomment

# one (or define a new one for the particular category you wish to

# change) to control this output.



notify-level warning

default-directnotify-level warning



# These specify where model files may be loaded from.  You probably

# want to set this to a sensible path for yourself.  $THIS_PRC_DIR is

# a special variable that indicates the same directory as this

# particular Config.prc file.



model-path    $MAIN_DIR

model-path    $THIS_PRC_DIR/..

model-path    $THIS_PRC_DIR/../models



# This enable the automatic creation of a TK window when running

# Direct.



want-directtools  #f

want-tk           #f



# Enable/disable performance profiling tool and frame-rate meter



want-pstats            #f

show-frame-rate-meter  #f



# Enable audio using the OpenAL audio library by default:



audio-library-name p3openal_audio



# Enable the use of the new movietexture class.



use-movietexture #t



# The new version of panda supports hardware vertex animation, but it's not quite ready



hardware-animated-vertices #f



# Enable the model-cache, but only for models, not textures.



model-cache-dir $USER_APPDATA/Panda3D-1.11

model-cache-textures #f



# This option specifies the default profiles for Cg shaders.

# Setting it to #t makes them arbvp1 and arbfp1, since these

# seem to be most reliable. Setting it to #f makes Panda use

# the latest profile available.



basic-shaders-only #f


